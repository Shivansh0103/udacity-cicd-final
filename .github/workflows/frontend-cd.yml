name: Frontend Continuous Deployment

on:
  push:
    branches: [main]
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

env:
  IMAGE_NAME: mp-frontend

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - run: npm ci
      - run: npm run lint

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - run: npm ci
      - run: CI=true npm test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - run: npm ci
      - run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ secrets.ECR_REPO_URL_BACKEND }}:${{ github.sha }} \
            -t ${{ secrets.ECR_REPO_URL_FRONTEND }}:${{ github.sha }} .
          docker push ${{ secrets.ECR_REPO_URL_FRONTEND }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Update Kubernetes manifest image tag
        run: |
          cd starter/frontend/k8s
          kustomize edit set image frontend=${{ secrets.ECR_REPO_URL_FRONTEND }}:${{ github.sha }}

      - name: Deploy to Kubernetes
        run: |
          cd starter/frontend/k8s
          kustomize build | kubectl apply -f -
